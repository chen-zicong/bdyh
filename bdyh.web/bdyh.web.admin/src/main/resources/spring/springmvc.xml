<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/aop 
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-4.2.xsd">
                        
	<!-- 自动扫描该包，使SpringMVC认为包下用了@controller注解的类是控制器 -->
	<context:component-scan base-package="com.bdyh" >
		<context:include-filter type="annotation"  
		         expression="org.springframework.stereotype.Controller" />
        <context:include-filter type="annotation" 
         		 expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
        <context:include-filter type="annotation" 
         		 expression="org.springframework.web.bind.annotation.RestControllerAdvice"/>
		<context:exclude-filter type="annotation"
				 expression="org.springframework.stereotype.Service" />  
    </context:component-scan> 
	<!-- 静态文件放置在webapp根目录下 -->
    <!-- <mvc:resources location="/admin/" mapping="/admin/**"/>
    <mvc:resources location="/upload/" mapping="/upload/**"/>
    <mvc:resources location="/public/" mapping="/public/**"/> -->
    
    <!--启用该标签代表 spring mvc 不拦截css、js、jpg等相关的静态资源-->
    <mvc:default-servlet-handler/>
	<mvc:annotation-driven />

	<!--避免IE执行AJAX时，返回JSON出现下载文件 -->
	<bean id="mappingJacksonHttpMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">    
	    <property name="supportedMediaTypes">    
	        <list>    
	            <value>text/html;charset=UTF-8</value>
                <value>application/json;charset=UTF-8</value>   
	        </list>    
	    </property>    
	</bean> 
	<mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 解决Controller返回json中文乱码问题 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
			    <property name="supportedMediaTypes">
                    <list>
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>
    
	<!-- 设置freeMarker的配置文件路径 -->  
    <bean id="freemarkerConfiguration"  
        class="org.springframework.beans.factory.config.PropertiesFactoryBean">  
        <property name="location" value="classpath:freemarker/freemarker.properties" />  
    </bean>  
    
    <!-- 配置freeMarker的模板路径 -->    
    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">    
        <property name="freemarkerSettings" ref="freemarkerConfiguration"/><!-- 设置FreeMarker环境属性 -->    
        <property name="templateLoaderPath">    
            <value>/WEB-INF/views/</value>    
        </property>
        <!-- <property name="freemarkerVariables">  
            <map>  
                设置一些常用全局变量  
                <entry key="xml_escape" value-ref="fmXmlEscape" />  
            </map>  
        </property>   -->  
    </bean> 
        
    <!-- 配置freeMarker视图解析器 -->  
    <bean id="viewResolver"  class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">  
        <property name="viewClass"  
            value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />  
        <property name="contentType" value="text/html; charset=utf-8" />  
        <property name="cache" value="true" />
        <property name="suffix" value=".html" />  
        <property name="order" value="0" />  
        <property name="exposeRequestAttributes" value="true" />  
        <property name="exposeSessionAttributes" value="true" />  
        <property name="exposeSpringMacroHelpers" value="true" />  
        <property name="requestContextAttribute" value="request" />  
    </bean>
    
	<!--通用视图解析器 -->  
    <bean id="viewResolverCommon" class="org.springframework.web.servlet.view.InternalResourceViewResolver">  
        <property name="prefix" value="/WEB-INF/jsp/" />  
        <property name="suffix" value=".jsp" />  
        <property name="viewClass" value="org.springframework.web.servlet.view.InternalResourceView" />  
        <property name="order" value="1" />  
    </bean> 
	
	<!-- 配置文件上传，如果没有使用文件上传可以不用配置，当然如果不配，那么配置文件中也不必引入上传组件包 -->
	<bean id="multipartResolver"  
        class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
        <!-- 默认编码 -->
        <property name="defaultEncoding" value="utf-8" />  
        <!-- 文件大小最大值 -->
        <property name="maxUploadSize" value="10485760000" />  
        <!-- 内存中的最大值 -->
        <property name="maxInMemorySize" value="40960" />  
    </bean>
     
    <!--拦截器 -->
	<mvc:interceptors>
		<!-- 多个拦截器,顺序执行 -->
		<mvc:interceptor>
			<mvc:mapping path="/**"/>
			<mvc:exclude-mapping path=""/>
			<bean class="com.bdyh.web.admin.interceptor.LoginInterceptor"></bean>
		</mvc:interceptor>
	</mvc:interceptors>

     
	<!-- 启动shiro授权注解拦截方式 -->
	<aop:config proxy-target-class="true"></aop:config>  
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">  
        <property name="securityManager" ref="securityManager"/>  
    </bean>  
</beans>
